CREATE TABLE lemmas (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY,
  spelling TEXT NOT NULL,
  -- empty for e.g. punctuation
  reading TEXT
);

CREATE TABLE variants (
  -- we assign this ourselves
  -- an alternative would be 1-n for each lemma + a pkey on the (id, lemma_id) pair
  id BIGINT,
  -- a variant is always a variant of some lemma
  lemma_id BIGINT NOT NULL,
  spelling TEXT NOT NULL,
  -- empty for e.g. punctuation
  reading TEXT
);

CREATE TABLE surface_forms (
  -- allow overriding
  id BIGINT GENERATED BY DEFAULT AS IDENTITY,
  -- may not be known
  variant_id BIGINT NOT NULL,
  spelling TEXT NOT NULL,
  -- may not have a known one
  reading TEXT
);

DO $$
BEGIN
  ALTER TABLE lemmas ADD CONSTRAINT lemmas_pkey PRIMARY KEY (id);
  ALTER TABLE variants ADD CONSTRAINT variants_pkey PRIMARY KEY (id);
  ALTER TABLE variants ADD CONSTRAINT variants_lemmas_fkey FOREIGN KEY (lemma_id) REFERENCES lemmas (id);
  ALTER TABLE surface_forms ADD CONSTRAINT surface_forms_pkey PRIMARY KEY (id);
  ALTER TABLE surface_forms ADD CONSTRAINT surface_forms_variants_fkey FOREIGN KEY (variant_id) REFERENCES variants (id);

  CREATE INDEX lemma_spelling_reading ON lemmas (spelling, reading) INCLUDE (id);
  CREATE INDEX variants_spelling_reading ON variants (spelling, reading) INCLUDE (id, lemma_id);
  CREATE INDEX surface_forms_spelling_reading ON surface_forms (spelling, reading) INCLUDE (id, variant_id);
END
$$;

CREATE TABLE defs (
  id INT GENERATED ALWAYS AS IDENTITY,
  -- TODO separate dicts table
  dict_name TEXT NOT NULL,
  spelling TEXT NOT NULL,
  reading TEXT NOT NULL,
  content JSONB NOT NULL
);

DO $$ BEGIN
  ALTER TABLE defs ADD CONSTRAINT defs_pkey PRIMARY KEY (id);
  CREATE INDEX defs_spelling_reading ON defs (spelling, reading);
END$$;

-- CREATE TABLE books (
--   id INT GENERATED ALWAYS AS IDENTITY,
--   title TEXT NOT NULL
  -- author, cover, reading_progress, etc
-- );

